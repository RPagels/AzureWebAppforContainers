{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "12412341953116176663"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "createdBy": {
      "type": "string",
      "defaultValue": "Randy Pagels"
    },
    "costCenter": {
      "type": "string",
      "defaultValue": "12345678"
    },
    "nickName": {
      "type": "string",
      "defaultValue": "rpagels"
    },
    "ADOServiceprincipalObjectId": {
      "type": "string",
      "defaultValue": "38372314-e1c9-455d-a11e-3edb60a46687"
    },
    "AzObjectIdPagels": {
      "type": "string",
      "defaultValue": "b6be0700-1fda-4f88-bf20-1aa508a91f73"
    }
  },
  "variables": {
    "appInsightsName": "[format('appi-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsWorkspaceName": "[format('appiws-{0}', uniqueString(resourceGroup().id))]",
    "appInsightsAlertName": "[format('responsetime-{0}', uniqueString(resourceGroup().id))]",
    "webAppPlanName": "[format('appplan-{0}', uniqueString(resourceGroup().id))]",
    "webSiteName": "[format('app-{0}', uniqueString(resourceGroup().id))]",
    "keyvaultName": "[format('kv-{0}', uniqueString(resourceGroup().id))]",
    "containerregistryName": "[format('containerregistry-{0}', uniqueString(resourceGroup().id))]",
    "containerAppName": "[format('containerapp-{0}', uniqueString(resourceGroup().id))]",
    "containerAppEnvName": "[format('containerapp-env-{0}', uniqueString(resourceGroup().id))]",
    "containerAppLogAnalyticsName": "[format('containerapp-log-{0}', uniqueString(resourceGroup().id))]",
    "defaultTags": {
      "App": "Web App for Containers",
      "CostCenter": "[parameters('costCenter')]",
      "CreatedBy": "[parameters('createdBy')]",
      "NickName": "[parameters('nickName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appinsightsdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          },
          "appInsightsAlertName": {
            "value": "[variables('appInsightsAlertName')]"
          },
          "appInsightsWorkspaceName": {
            "value": "[variables('appInsightsWorkspaceName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "5029855023310949492"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "appInsightsName": {
              "type": "string"
            },
            "appInsightsWorkspaceName": {
              "type": "string"
            },
            "appInsightsAlertName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-12-01-preview",
              "name": "[parameters('appInsightsWorkspaceName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                  "searchVersion": 1,
                  "legacy": 0,
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[parameters('appInsightsName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightsWorkspaceName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('appInsightsWorkspaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/metricAlerts",
              "apiVersion": "2018-03-01",
              "name": "[parameters('appInsightsAlertName')]",
              "location": "global",
              "properties": {
                "description": "Response time alert",
                "severity": 0,
                "enabled": true,
                "scopes": [
                  "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                  "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                  "allOf": [
                    {
                      "name": "1st criterion",
                      "metricName": "requests/duration",
                      "operator": "GreaterThan",
                      "threshold": 500,
                      "timeAggregation": "Average",
                      "criterionType": "StaticThresholdCriterion"
                    }
                  ]
                },
                "actions": [
                  {
                    "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', format('ag--{0}', uniqueString(resourceGroup().id)))]"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
                "[resourceId('Microsoft.Insights/actionGroups', format('ag--{0}', uniqueString(resourceGroup().id)))]"
              ]
            },
            {
              "type": "Microsoft.Insights/actionGroups",
              "apiVersion": "2022-06-01",
              "name": "[format('ag--{0}', uniqueString(resourceGroup().id))]",
              "location": "global",
              "properties": {
                "groupShortName": "Randy Pagels",
                "enabled": true,
                "emailReceivers": [
                  {
                    "name": "Randy Pagels",
                    "emailAddress": "rpagels@microsoft.com",
                    "useCommonAlertSchema": true
                  }
                ]
              }
            }
          ],
          "outputs": {
            "out_appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            "out_appInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "webappdeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "webAppPlanName": {
            "value": "[variables('webAppPlanName')]"
          },
          "webSiteName": {
            "value": "[variables('webSiteName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "defaultTags": {
            "value": "[variables('defaultTags')]"
          },
          "appInsightsName": {
            "value": "[variables('appInsightsName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "7886169803414441486"
            }
          },
          "parameters": {
            "skuName": {
              "type": "string",
              "defaultValue": "S2"
            },
            "location": {
              "type": "string"
            },
            "webAppPlanName": {
              "type": "string"
            },
            "webSiteName": {
              "type": "string"
            },
            "defaultTags": {
              "type": "object"
            },
            "appInsightsName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[parameters('webAppPlanName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('defaultTags')]",
              "properties": {},
              "sku": {
                "name": "[parameters('skuName')]"
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[parameters('webSiteName')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": "[parameters('defaultTags')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "minTlsVersion": "1.2",
                  "healthCheckPath": "/healthy",
                  "netFrameworkVersion": "v6.0",
                  "alwaysOn": true,
                  "autoHealEnabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/slots",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('webSiteName'), 'dev')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "displayName": "webAppSlots"
              },
              "location": "[parameters('location')]",
              "properties": {
                "siteConfig": {
                  "minTlsVersion": "1.2",
                  "healthCheckPath": "/healthy",
                  "netFrameworkVersion": "v6.0",
                  "alwaysOn": true,
                  "autoHealEnabled": true
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('webAppPlanName'))]"
              ]
            },
            {
              "type": "Microsoft.Insights/webtests",
              "apiVersion": "2022-06-15",
              "name": "Home Page Ping Test",
              "location": "[parameters('location')]",
              "tags": {
                "[format('hidden-link:{0}/resourceGroups/{1}/providers/microsoft.insights/components/{2}', subscription().id, resourceGroup().name, parameters('appInsightsName'))]": "Resource"
              },
              "kind": "ping",
              "properties": {
                "SyntheticMonitorId": "[parameters('appInsightsName')]",
                "Name": "Page Home",
                "Description": null,
                "Enabled": true,
                "Frequency": 300,
                "Timeout": 120,
                "Kind": "standard",
                "RetryEnabled": true,
                "Locations": [
                  {
                    "Id": "us-va-ash-azr"
                  },
                  {
                    "Id": "us-fl-mia-edge"
                  },
                  {
                    "Id": "us-ca-sjc-azr"
                  }
                ],
                "Configuration": null,
                "Request": {
                  "RequestUrl": "[format('https://{0}.azurewebsites.net/', parameters('webSiteName'))]",
                  "Headers": null,
                  "HttpVerb": "GET",
                  "RequestBody": null,
                  "ParseDependentRequests": false,
                  "FollowRedirects": null
                },
                "ValidationRules": {
                  "ExpectedHttpStatusCode": 200,
                  "IgnoreHttpsStatusCode": false,
                  "ContentValidation": null,
                  "SSLCheck": true,
                  "SSLCertRemainingLifetimeCheck": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
              ]
            }
          ],
          "outputs": {
            "out_appService": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', parameters('webSiteName'))]"
            },
            "out_webSiteName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webSiteName')), '2022-03-01').defaultHostName]"
            },
            "out_webSiteSlotName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites/slots', parameters('webSiteName'), 'dev'), '2022-03-01').defaultHostName]"
            },
            "out_appServiceprincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', parameters('webSiteName')), '2022-03-01', 'full').identity.principalId]"
            },
            "out_appServiceSlotServiceprincipalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites/slots', parameters('webSiteName'), 'dev'), '2022-03-01', 'full').identity.principalId]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('keyvaultName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vaultName": {
            "value": "[variables('keyvaultName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "6347807411797510672"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "vaultName": {
              "type": "string"
            },
            "tenant": {
              "type": "string",
              "defaultValue": "[subscription().tenantId]"
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": []
            },
            "networkAcls": {
              "type": "object",
              "defaultValue": {
                "ipRules": [],
                "virtualNetworkRules": []
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('vaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[parameters('tenant')]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "enableSoftDelete": false,
                "accessPolicies": "[parameters('accessPolicies')]",
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "networkAcls": "[parameters('networkAcls')]"
              }
            }
          ],
          "outputs": {
            "proxyKey": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('vaultName')), '2022-07-01', 'full')]"
            },
            "keyvaultName": {
              "type": "string",
              "value": "[parameters('vaultName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('containerregistryName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerregistryName": {
            "value": "[variables('containerregistryName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "7954355190786689740"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "containerregistryName": {
              "type": "string"
            },
            "acrAdminUserEnabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable an admin user that has push/pull permission to the registry."
              }
            },
            "acrSku": {
              "type": "string",
              "defaultValue": "Basic",
              "metadata": {
                "description": "Tier of your Azure Container Registry."
              },
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2022-02-01-preview",
              "name": "[parameters('containerregistryName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "displayName": "Container Registry",
                "container.registry": "[parameters('containerregistryName')]"
              },
              "sku": {
                "name": "[parameters('acrSku')]"
              },
              "properties": {
                "adminUserEnabled": "[parameters('acrAdminUserEnabled')]"
              }
            }
          ],
          "outputs": {
            "acrLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerregistryName')), '2022-02-01-preview').loginServer]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[variables('containerAppName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "containerAppEnvName": {
            "value": "[variables('containerAppEnvName')]"
          },
          "containerAppLogAnalyticsName": {
            "value": "[variables('containerAppLogAnalyticsName')]"
          },
          "containerAppName": {
            "value": "[variables('containerAppName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "700068921734423900"
            }
          },
          "parameters": {
            "containerAppName": {
              "type": "string"
            },
            "containerAppEnvName": {
              "type": "string"
            },
            "containerAppLogAnalyticsName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "allowedValues": [
                "northcentralusstage",
                "eastus",
                "northeurope",
                "canadacentral"
              ],
              "metadata": {
                "description": "Specifies the location for all resources."
              }
            },
            "containerImage": {
              "type": "string",
              "defaultValue": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
              "metadata": {
                "description": "Specifies the docker container image to deploy."
              }
            },
            "targetPort": {
              "type": "int",
              "defaultValue": 80,
              "metadata": {
                "description": "Specifies the container port."
              }
            },
            "cpuCore": {
              "type": "string",
              "defaultValue": "0.5",
              "metadata": {
                "description": "Number of CPU cores the container can use. Can be with a maximum of two decimals."
              }
            },
            "memorySize": {
              "type": "string",
              "defaultValue": "1",
              "metadata": {
                "description": "Amount of memory (in gibibytes, GiB) allocated to the container up to 4GiB. Can be with a maximum of two decimals. Ratio with CPU cores must be equal to 2."
              }
            },
            "minReplicas": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 25,
              "minValue": 0,
              "metadata": {
                "description": "Minimum number of replicas that will be deployed"
              }
            },
            "maxReplicas": {
              "type": "int",
              "defaultValue": 3,
              "maxValue": 25,
              "minValue": 0,
              "metadata": {
                "description": "Maximum number of replicas that will be deployed"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[parameters('containerAppLogAnalyticsName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                }
              }
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2022-06-01-preview",
              "name": "[parameters('containerAppEnvName')]",
              "location": "[parameters('location')]",
              "properties": {
                "appLogsConfiguration": {
                  "destination": "log-analytics",
                  "logAnalyticsConfiguration": {
                    "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName')), '2022-10-01').customerId]",
                    "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName')), '2022-10-01').primarySharedKey]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('containerAppLogAnalyticsName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2022-06-01-preview",
              "name": "[parameters('containerAppName')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]",
                "configuration": {
                  "ingress": {
                    "external": true,
                    "targetPort": "[parameters('targetPort')]",
                    "allowInsecure": false,
                    "traffic": [
                      {
                        "latestRevision": true,
                        "weight": 100
                      }
                    ]
                  }
                },
                "template": {
                  "revisionSuffix": "firstrevision",
                  "containers": [
                    {
                      "name": "[parameters('containerAppName')]",
                      "image": "[parameters('containerImage')]",
                      "resources": {
                        "cpu": "[json(parameters('cpuCore'))]",
                        "memory": "[format('{0}Gi', parameters('memorySize'))]"
                      }
                    }
                  ],
                  "scale": {
                    "minReplicas": "[parameters('minReplicas')]",
                    "maxReplicas": "[parameters('maxReplicas')]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppEnvName'))]"
              ]
            }
          ],
          "outputs": {
            "containerAppFQDN": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.App/containerApps', parameters('containerAppName')), '2022-06-01-preview').configuration.ingress.fqdn]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "configSettings",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "keyvaultName": {
            "value": "[variables('keyvaultName')]"
          },
          "tenant": {
            "value": "[subscription().tenantId]"
          },
          "webappName": {
            "value": "[variables('webSiteName')]"
          },
          "appServiceprincipalId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'webappdeploy'), '2020-10-01').outputs.out_appServiceprincipalId.value]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsInstrumentationKey.value]"
          },
          "appInsightsConnectionString": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy'), '2020-10-01').outputs.out_appInsightsConnectionString.value]"
          },
          "ADOServiceprincipalObjectId": {
            "value": "[parameters('ADOServiceprincipalObjectId')]"
          },
          "AzObjectIdPagels": {
            "value": "[parameters('AzObjectIdPagels')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "13952192921911176513"
            }
          },
          "parameters": {
            "keyvaultName": {
              "type": "string"
            },
            "webappName": {
              "type": "string"
            },
            "tenant": {
              "type": "string"
            },
            "appServiceprincipalId": {
              "type": "secureString"
            },
            "ADOServiceprincipalObjectId": {
              "type": "secureString"
            },
            "AzObjectIdPagels": {
              "type": "secureString"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appInsightsConnectionString": {
              "type": "string"
            },
            "accessPolicies": {
              "type": "array",
              "defaultValue": [
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('appServiceprincipalId')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list"
                    ]
                  }
                },
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('ADOServiceprincipalObjectId')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list",
                      "set"
                    ]
                  }
                },
                {
                  "tenantId": "[parameters('tenant')]",
                  "objectId": "[parameters('AzObjectIdPagels')]",
                  "permissions": {
                    "keys": [
                      "get",
                      "list"
                    ],
                    "secrets": [
                      "get",
                      "list",
                      "set",
                      "delete"
                    ]
                  }
                }
              ]
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/accessPolicies",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('keyvaultName'), 'replace')]",
              "properties": {
                "accessPolicies": "[parameters('accessPolicies')]"
              }
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('webappName'), 'appsettings')]",
              "kind": "string",
              "properties": {
                "WEBSITE_RUN_FROM_PACKAGE": "1",
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[parameters('appInsightsInstrumentationKey')]",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
                "APPLICATIONINSIGHTS_CONNECTION_STRING": "[parameters('appInsightsConnectionString')]",
                "WebAppUrl": "[format('https://{0}.azurewebsites.net/', parameters('webappName'))]",
                "ASPNETCORE_ENVIRONMENT": "Development",
                "KeyVaultUrl": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName')), '2022-07-01').vaultUri]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appinsightsdeploy')]",
        "[resourceId('Microsoft.Resources/deployments', variables('keyvaultName'))]",
        "[resourceId('Microsoft.Resources/deployments', 'webappdeploy')]"
      ]
    }
  ],
  "outputs": {
    "out_webSiteName": {
      "type": "string",
      "value": "[variables('webSiteName')]"
    },
    "out_keyvaultName": {
      "type": "string",
      "value": "[variables('keyvaultName')]"
    }
  }
}